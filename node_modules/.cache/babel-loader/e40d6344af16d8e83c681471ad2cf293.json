{"ast":null,"code":"import _classCallCheck from \"/Users/justinriddle/Desktop/Homework/Clicky-Game/clicky/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/justinriddle/Desktop/Homework/Clicky-Game/clicky/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/justinriddle/Desktop/Homework/Clicky-Game/clicky/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/justinriddle/Desktop/Homework/Clicky-Game/clicky/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/justinriddle/Desktop/Homework/Clicky-Game/clicky/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/justinriddle/Desktop/Homework/Clicky-Game/clicky/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      currentScore: 0,\n      topScore: 0,\n      winner: \"\",\n      clicked: []\n    };\n\n    _this.handleClick = function (id) {\n      if (_this.state.clicked.indexOf(id) === -1) {\n        _this.handleIncrement();\n\n        _this.setState({\n          clicked: _this.state.clicked.concat(id)\n        });\n      } else {\n        _this.handleReset();\n      }\n    };\n\n    _this.handleIncrement = function () {\n      var newScore = _this.state.currentScore + 1;\n\n      _this.setState({\n        currentScore: newScore,\n        winner: \"\"\n      });\n\n      if (newScore >= _this.state.topScore) {\n        _this.setState({\n          topScore: newScore\n        });\n      } else if (newScore === 36) {\n        _this.setState({\n          winner: \"WINNER!!!\"\n        });\n      }\n\n      var shuffledArray = _this.handlePictureShuffle(_this.state.friends);\n\n      _this.setState({\n        friends: shuffledArray\n      });\n    };\n\n    _this.handleReset = function () {\n      _this.setState({\n        currentScore: 0,\n        topScore: _this.state.topScore,\n        winner: \"Wrong answer -- please play again!\",\n        clicked: []\n      });\n\n      var shuffledArray = _this.handlePictureShuffle(_this.state.friends);\n\n      _this.setState({\n        friends: shuffledArray\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handlePictureShuffle\",\n    value: function handlePictureShuffle(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [array[j], array[i]];\n        array[i] = _ref[0];\n        array[j] = _ref[1];\n      }\n\n      return array;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        winner: this.state.winner,\n        score: this.state.currentScore,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Click Each Image Only Once to Win the Game!\"), this.state.friends.map(function (friend) {\n        return React.createElement(FriendCard, {\n          handleClick: _this2.handleClick,\n          id: friend.id,\n          name: friend.name,\n          key: friend.id,\n          image: friend.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/justinriddle/Desktop/Homework/Clicky-Game/clicky/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","Nav","App","state","currentScore","topScore","winner","clicked","handleClick","id","indexOf","handleIncrement","setState","concat","handleReset","newScore","shuffledArray","handlePictureShuffle","array","i","length","j","Math","floor","random","map","friend","name","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\n\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    currentScore: 0,\n    topScore: 0,\n    winner: \"\",\n    clicked: [],\n  };\n\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({clicked:this.state.clicked.concat(id)});\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      winner: \"\"\n    });\n    if (newScore >= this.state.topScore) {\n      this.setState({ topScore: newScore });\n    }\n    else if (newScore === 36) {\n      this.setState({ winner: \"WINNER!!!\" });\n    }\n    var shuffledArray = this.handlePictureShuffle(this.state.friends);\n    this.setState({ friends: shuffledArray });\n    \n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      winner: \"Wrong answer -- please play again!\",\n      clicked: []\n    });\n    var shuffledArray = this.handlePictureShuffle(this.state.friends);\n    this.setState({ friends: shuffledArray });\n  };\n\n  handlePictureShuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n     let j = Math.floor(Math.random() * (i + 1));\n     [array[i], array[j]] = [array[j], array[i]];\n   }\n   return array;\n };\n\n  render() {\n    return (\n      <Wrapper>\n\n        <Nav\n          winner={this.state.winner}\n          score={this.state.currentScore}\n          topScore={this.state.topScore}\n        />\n        \n      <br/>\n      <br/>\n      <br/>\n\n        <Title>Click Each Image Only Once to Win the Game!</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            handleClick={this.handleClick}\n            id={friend.id}\n            name={friend.name}\n            key={friend.id}\n            image={friend.image}\n            \n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}